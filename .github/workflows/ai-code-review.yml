name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]
  workflow_dispatch:  # Allow manual triggering

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    
    # Only run on pull requests, not on draft PRs
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better diff analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/code-review/requirements.txt
      
      - name: Run AI Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "ðŸ¤– Starting AI Code Review for PR #${{ github.event.number }}"
          echo "ðŸ“Š Repository: ${{ github.repository }}"
          echo "ðŸŒ¿ Base branch: ${{ github.event.pull_request.base.ref }}"
          echo "ðŸŒ¿ Head branch: ${{ github.event.pull_request.head.ref }}"
          
          # Run the code review bot
          python .github/code-review/code_review_bot.py ${{ github.event.number }}
          
          echo "âœ… Code review completed for PR #${{ github.event.number }}"
      
      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if review was successful
            if (process.env.GITHUB_STEP_SUMMARY) {
              const summary = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
              console.log('Review summary:', summary);
            }
            
            // Add a reaction to indicate the bot has reviewed
            github.rest.reactions.createForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              content: 'robot'
            });

  # Optional: Run on schedule for periodic reviews
  scheduled-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/code-review/requirements.txt
      
      - name: Review recent PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Get recent PRs that haven't been reviewed by the bot
          python -c "
          import requests
          import os
          
          token = os.getenv('GITHUB_TOKEN')
          owner = os.getenv('REPO_OWNER')
          repo = os.getenv('REPO_NAME')
          
          headers = {'Authorization': f'token {token}'}
          url = f'https://api.github.com/repos/{owner}/{repo}/pulls'
          
          response = requests.get(url, headers=headers, params={'state': 'open'})
          prs = response.json()
          
          for pr in prs[:5]:  # Review last 5 open PRs
              print(f'Reviewing PR #{pr[\"number\"]}')
              os.system(f'python .github/code-review/code_review_bot.py {pr[\"number\"]}')
          "
